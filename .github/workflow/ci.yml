name: Dongarium CI pipeline

on:
  pull_request:
    branches: [ "develop", "main" ]

jobs:
  install-dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22'

      - name: Restore node modules from cache
        id: restore-node-modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node

      - name: Install dependencies
        if: steps.restore-node-modules.outputs.cache-hit != 'true'
        run: npm install

  lint:
    runs-on: ubuntu-latest
    needs: install-dependencies
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22'

      - name: Restore node modules from cache
        id: restore-node-modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies (if not cached)
        if: steps.restore-node-modules.outputs.cache-hit != 'true'
        run: npm install

      - name: Run lint
        run: npm run lint

  type-check:
    runs-on: ubuntu-latest
    needs: install-dependencies
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '22'
      - name: Restore node modules from cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
      - name: Install dependencies
        run: npm install
      - name: TypeScript type check
        run: npx tsc --noEmit


  build:
    runs-on: ubuntu-latest
    needs: [install-dependencies, lint]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22'

      - name: Restore node modules from cache
        id: restore-node-modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies (if not cached)
        if: steps.restore-node-modules.outputs.cache-hit != 'true'
        run: npm install


      - name: Run Build
        run: npm run build
